---
import { getCollection } from "astro:content"
import PageLayout from "@layouts/PageLayout.astro"
import TopLayout from "@layouts/TopLayout.astro"
import BottomLayout from "@layouts/BottomLayout.astro"
import Blog from "@components/Blog"
import { BLOG, PHOTOGRAPHY } from "@consts"
import { getImage } from "astro:assets";
const { data } = Astro.props;
import Lightbox from "@components/Lightbox"

const albums = (await getCollection("albums"))
const imageImports = import.meta.glob("../../content/albums/**/*.{jpg,jpeg,png,gif,webp,JPG}", {
  eager: true
});

const rawImages = Object.values(imageImports).map((mod: any, path) => mod.default);

// For each image, generate a placeholder (e.g., small 100px wide version)
const allImages = await Promise.all(
  rawImages.map(async (img, path) => {
    // Using Astro's getImage API to generate a small placeholder
    const placeholderImage = await getImage({
      src: img,
      height: 200, // Adjust height as needed
      width: 200, // Adjust width as needed
      format: "webp", // or keep original format

    });

    const fullImage = await getImage({
      src: img,
      quality: 70, // Adjust quality as needed
      format: "jpg", // or keep original format
    });

    return {
      src: fullImage.src, // full-size original
      placeholder: placeholderImage.src, // small placeholder

    };
  })
);
---

<PageLayout title={PHOTOGRAPHY.TITLE} description={PHOTOGRAPHY.DESCRIPTION}>
  <TopLayout>
    <div class="animate page-heading">
      {PHOTOGRAPHY.TITLE}
    </div>
  </TopLayout>
  <BottomLayout>
    <div class="animate relative">
      <Lightbox client:only images={allImages} />
    </div>
  </BottomLayout>
</PageLayout>


